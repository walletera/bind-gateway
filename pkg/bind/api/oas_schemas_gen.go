// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// Ref: #/components/schemas/apiError
type ApiError struct {
	EventId       OptString             `json:"eventId"`
	Detalle       OptString             `json:"detalle"`
	CorrelationId OptString             `json:"correlationId"`
	Errores       []ApiErrorErroresItem `json:"errores"`
}

// GetEventId returns the value of EventId.
func (s *ApiError) GetEventId() OptString {
	return s.EventId
}

// GetDetalle returns the value of Detalle.
func (s *ApiError) GetDetalle() OptString {
	return s.Detalle
}

// GetCorrelationId returns the value of CorrelationId.
func (s *ApiError) GetCorrelationId() OptString {
	return s.CorrelationId
}

// GetErrores returns the value of Errores.
func (s *ApiError) GetErrores() []ApiErrorErroresItem {
	return s.Errores
}

// SetEventId sets the value of EventId.
func (s *ApiError) SetEventId(val OptString) {
	s.EventId = val
}

// SetDetalle sets the value of Detalle.
func (s *ApiError) SetDetalle(val OptString) {
	s.Detalle = val
}

// SetCorrelationId sets the value of CorrelationId.
func (s *ApiError) SetCorrelationId(val OptString) {
	s.CorrelationId = val
}

// SetErrores sets the value of Errores.
func (s *ApiError) SetErrores(val []ApiErrorErroresItem) {
	s.Errores = val
}

type ApiErrorErroresItem struct {
	Codigo  OptString `json:"codigo"`
	Titulo  OptString `json:"titulo"`
	Detalle OptString `json:"detalle"`
}

// GetCodigo returns the value of Codigo.
func (s *ApiErrorErroresItem) GetCodigo() OptString {
	return s.Codigo
}

// GetTitulo returns the value of Titulo.
func (s *ApiErrorErroresItem) GetTitulo() OptString {
	return s.Titulo
}

// GetDetalle returns the value of Detalle.
func (s *ApiErrorErroresItem) GetDetalle() OptString {
	return s.Detalle
}

// SetCodigo sets the value of Codigo.
func (s *ApiErrorErroresItem) SetCodigo(val OptString) {
	s.Codigo = val
}

// SetTitulo sets the value of Titulo.
func (s *ApiErrorErroresItem) SetTitulo(val OptString) {
	s.Titulo = val
}

// SetDetalle sets the value of Detalle.
func (s *ApiErrorErroresItem) SetDetalle(val OptString) {
	s.Detalle = val
}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

type CreateTransferBadRequest ApiError

func (*CreateTransferBadRequest) createTransferRes() {}

// Ref: #/components/schemas/createTransferRequest
type CreateTransferRequest struct {
	// CVU de la cuenta origen desde la cual se debitará los fondos para realizar la transferencia.
	CvuOrigen string `json:"cvuOrigen"`
	// CBU/CVU de la cuenta destino a la cual se le deben acreditar los fondos transferidos. Puede
	// omitirse si se envía alias.
	CbuCvuDestino OptString `json:"cbu_cvu_destino"`
	// CUIL/CUIT del titular de la cuenta destino a la cual se le deben acreditar los fondos transferidos.
	//  Este campo es opcional pero si se envía pueden aplicarse reglas de monitoreo transaccional sobre
	// el destinatario de las transferencias.
	CuitDestino OptString `json:"cuit_destino"`
	// Alias de la cuenta destino a la cual se le deben acreditar los fondos transferidos. Puede omitirse
	// si se envía cbu_cvu_destino.
	AliasDestino OptString `json:"alias_destino"`
	// Valor del importe a transferir.
	Importe float64 `json:"importe"`
	// Descripción de referencia de la transferencia.
	Referencia OptString `json:"referencia"`
	// Concepto de la transferencia.
	Concepto OptString `json:"concepto"`
	// Array de strings con lista de correos electrónicos de los destinatarios a los cuales se les
	// enviará un comprobante de la transferencia. El comprobante de la transferencia es enviado por
	// nuestro banco sponsor y no podemos modificar el diseño con el que es enviado.
	Emails []jx.Raw `json:"emails"`
	// Identificador o código externo de la entidad informado opcionalmente para ser relacionado como
	// atributo adicional de la operación. Puede utilizarse para luego realizarse consultas y otras
	// acciones referenciandose a este id externo.
	IdExterno OptString `json:"idExterno"`
}

// GetCvuOrigen returns the value of CvuOrigen.
func (s *CreateTransferRequest) GetCvuOrigen() string {
	return s.CvuOrigen
}

// GetCbuCvuDestino returns the value of CbuCvuDestino.
func (s *CreateTransferRequest) GetCbuCvuDestino() OptString {
	return s.CbuCvuDestino
}

// GetCuitDestino returns the value of CuitDestino.
func (s *CreateTransferRequest) GetCuitDestino() OptString {
	return s.CuitDestino
}

// GetAliasDestino returns the value of AliasDestino.
func (s *CreateTransferRequest) GetAliasDestino() OptString {
	return s.AliasDestino
}

// GetImporte returns the value of Importe.
func (s *CreateTransferRequest) GetImporte() float64 {
	return s.Importe
}

// GetReferencia returns the value of Referencia.
func (s *CreateTransferRequest) GetReferencia() OptString {
	return s.Referencia
}

// GetConcepto returns the value of Concepto.
func (s *CreateTransferRequest) GetConcepto() OptString {
	return s.Concepto
}

// GetEmails returns the value of Emails.
func (s *CreateTransferRequest) GetEmails() []jx.Raw {
	return s.Emails
}

// GetIdExterno returns the value of IdExterno.
func (s *CreateTransferRequest) GetIdExterno() OptString {
	return s.IdExterno
}

// SetCvuOrigen sets the value of CvuOrigen.
func (s *CreateTransferRequest) SetCvuOrigen(val string) {
	s.CvuOrigen = val
}

// SetCbuCvuDestino sets the value of CbuCvuDestino.
func (s *CreateTransferRequest) SetCbuCvuDestino(val OptString) {
	s.CbuCvuDestino = val
}

// SetCuitDestino sets the value of CuitDestino.
func (s *CreateTransferRequest) SetCuitDestino(val OptString) {
	s.CuitDestino = val
}

// SetAliasDestino sets the value of AliasDestino.
func (s *CreateTransferRequest) SetAliasDestino(val OptString) {
	s.AliasDestino = val
}

// SetImporte sets the value of Importe.
func (s *CreateTransferRequest) SetImporte(val float64) {
	s.Importe = val
}

// SetReferencia sets the value of Referencia.
func (s *CreateTransferRequest) SetReferencia(val OptString) {
	s.Referencia = val
}

// SetConcepto sets the value of Concepto.
func (s *CreateTransferRequest) SetConcepto(val OptString) {
	s.Concepto = val
}

// SetEmails sets the value of Emails.
func (s *CreateTransferRequest) SetEmails(val []jx.Raw) {
	s.Emails = val
}

// SetIdExterno sets the value of IdExterno.
func (s *CreateTransferRequest) SetIdExterno(val OptString) {
	s.IdExterno = val
}

// Ref: #/components/schemas/createTransferResponse
type CreateTransferResponse struct {
	OperacionId        OptInt    `json:"operacionId"`
	OperacionIdExterno OptString `json:"operacionIdExterno"`
	// Descripción del estado de la transferencia informado por nuestro procesador externo (en este caso,
	//  el banco). El estado UNKNOWN se produce cuando hubo un error de comunicación con algún sistema
	// externo, el mismo tratará de actualizarse durante el día. En el caso de una transferencia a un
	// CVU, inicialmente quedan en estado IN_PROGRESS, este estado se intentará resolver durante el día
	// o al final del mismo cuando se concilien todas las operaciones. El estado UNKNOWN_FOREVER indica
	// que la operación no pudo resolver el estado, y no se va a reintentar actualizar en forma
	// automática. Los estados COMPLETED o FAILED son estado finales que indican que la operación se
	// completó o falló.
	EstadoExterno OptCreateTransferResponseEstadoExterno `json:"estadoExterno"`
	// Identificador del estado de la operación. Este es el estado que importa en nuestro sistema.
	EstadoId       OptCreateTransferResponseEstadoId `json:"estadoId"`
	OrigenCuentaId OptInt                            `json:"origenCuentaId"`
	// Identificador de Coelsa por esta transferencia. Es el identificador más importante para
	// intercambiar consultas y reclamos con otros bancos, billeteras o proveedores de cuenta.
	CoelsaId OptString `json:"coelsaId"`
	// Fecha y hora en que finalizó la transferencia en el banco.
	FechaInicio OptDateTime `json:"fechaInicio"`
	// Fecha y hora en que finalizó la transferencia en el banco.
	FechaFin OptDateTime `json:"fechaFin"`
	// Fecha y hora en que se instruyó la creación de la transferencia.
	FechaNegocio OptDateTime `json:"fechaNegocio"`
	// Valor del importe de la transferencia.
	Importe OptFloat64 `json:"importe"`
	// CVU desde el que se originó la operación.
	CvuOrigen OptString `json:"cvuOrigen"`
	// Referencia de la operación.
	Referencia OptString `json:"referencia"`
	// Concepto de la operación.
	Concepto OptString `json:"concepto"`
	// CBU/CVU de la cuenta destino a la cual se le deben acreditar los fondos transferidos.
	CvuCbuContraparte OptString `json:"cvuCbuContraparte"`
	// Alias de la cuenta destino a la cual se le deben acreditar los fondos transferidos.
	AliasContraparte OptString `json:"aliasContraparte"`
	// Nombre del titular de la cuenta destino a la cual se le deben acreditar los fondos transferidos.
	NombreContraparte OptString `json:"nombreContraparte"`
	// CUIT/CUIL del titular de la cuenta destino a la cual se le deben acreditar los fondos transferidos.
	CuitCuilContraparte OptString `json:"cuitCuilContraparte"`
	// Identificador del comprobante creado asociado a esta operación. Es el comprobante de débito del
	// saldo.
	ComprobanteId OptInt `json:"comprobanteId"`
	// Identificador del comprobante de la devolución, si corresponde. Este comprobante se crearía
	// eventualmente si la transferencia fue creada pero finalmente su estado es fallido en el banco.
	// Entonces, la transferencia saliente tendrá un comprobante de débito original para retener el
	// saldo y luego tendrá un nuevo comprobante de crédito para devolver el saldo a la cuenta por la
	// transferencia que finalmente no se realizó.
	ComprobanteDevolucionId OptInt `json:"comprobanteDevolucionId"`
	// Descripción adicional del estado enviado por el procesador (en este caso, el banco).
	MensajeAdicional OptString `json:"mensajeAdicional"`
	// Indica si la transferencia es interna. Es decir, si la transferencia se realizó entre cuentas de
	// la misma entidad.
	EsTransferenciaInterna OptBool `json:"esTransferenciaInterna"`
	// Indica si la operación adquirió un estado definitivo que ya no cambiará.
	EstaFinalizada OptBool `json:"estaFinalizada"`
	EstaRechazada  OptBool `json:"estaRechazada"`
	// Indica si la transferencia está en un estado no definitivo que requiere alguna acción para ser
	// resuelto o no. Que esté pendiente de ser auditada significa que será incluída en nuestro
	// proceso de conciliación automática o será analizada por nuestro equipo de administración para
	// determinar un estado definitivo.
	EstaAAuditar OptBool `json:"estaAAuditar"`
	// Indica si la transferencia está pendiente o no. Que esté pendiente significa que aún no se ha
	// intentado instruir en nuestro procesador externo.
	EstaPendiente OptBool `json:"estaPendiente"`
}

// GetOperacionId returns the value of OperacionId.
func (s *CreateTransferResponse) GetOperacionId() OptInt {
	return s.OperacionId
}

// GetOperacionIdExterno returns the value of OperacionIdExterno.
func (s *CreateTransferResponse) GetOperacionIdExterno() OptString {
	return s.OperacionIdExterno
}

// GetEstadoExterno returns the value of EstadoExterno.
func (s *CreateTransferResponse) GetEstadoExterno() OptCreateTransferResponseEstadoExterno {
	return s.EstadoExterno
}

// GetEstadoId returns the value of EstadoId.
func (s *CreateTransferResponse) GetEstadoId() OptCreateTransferResponseEstadoId {
	return s.EstadoId
}

// GetOrigenCuentaId returns the value of OrigenCuentaId.
func (s *CreateTransferResponse) GetOrigenCuentaId() OptInt {
	return s.OrigenCuentaId
}

// GetCoelsaId returns the value of CoelsaId.
func (s *CreateTransferResponse) GetCoelsaId() OptString {
	return s.CoelsaId
}

// GetFechaInicio returns the value of FechaInicio.
func (s *CreateTransferResponse) GetFechaInicio() OptDateTime {
	return s.FechaInicio
}

// GetFechaFin returns the value of FechaFin.
func (s *CreateTransferResponse) GetFechaFin() OptDateTime {
	return s.FechaFin
}

// GetFechaNegocio returns the value of FechaNegocio.
func (s *CreateTransferResponse) GetFechaNegocio() OptDateTime {
	return s.FechaNegocio
}

// GetImporte returns the value of Importe.
func (s *CreateTransferResponse) GetImporte() OptFloat64 {
	return s.Importe
}

// GetCvuOrigen returns the value of CvuOrigen.
func (s *CreateTransferResponse) GetCvuOrigen() OptString {
	return s.CvuOrigen
}

// GetReferencia returns the value of Referencia.
func (s *CreateTransferResponse) GetReferencia() OptString {
	return s.Referencia
}

// GetConcepto returns the value of Concepto.
func (s *CreateTransferResponse) GetConcepto() OptString {
	return s.Concepto
}

// GetCvuCbuContraparte returns the value of CvuCbuContraparte.
func (s *CreateTransferResponse) GetCvuCbuContraparte() OptString {
	return s.CvuCbuContraparte
}

// GetAliasContraparte returns the value of AliasContraparte.
func (s *CreateTransferResponse) GetAliasContraparte() OptString {
	return s.AliasContraparte
}

// GetNombreContraparte returns the value of NombreContraparte.
func (s *CreateTransferResponse) GetNombreContraparte() OptString {
	return s.NombreContraparte
}

// GetCuitCuilContraparte returns the value of CuitCuilContraparte.
func (s *CreateTransferResponse) GetCuitCuilContraparte() OptString {
	return s.CuitCuilContraparte
}

// GetComprobanteId returns the value of ComprobanteId.
func (s *CreateTransferResponse) GetComprobanteId() OptInt {
	return s.ComprobanteId
}

// GetComprobanteDevolucionId returns the value of ComprobanteDevolucionId.
func (s *CreateTransferResponse) GetComprobanteDevolucionId() OptInt {
	return s.ComprobanteDevolucionId
}

// GetMensajeAdicional returns the value of MensajeAdicional.
func (s *CreateTransferResponse) GetMensajeAdicional() OptString {
	return s.MensajeAdicional
}

// GetEsTransferenciaInterna returns the value of EsTransferenciaInterna.
func (s *CreateTransferResponse) GetEsTransferenciaInterna() OptBool {
	return s.EsTransferenciaInterna
}

// GetEstaFinalizada returns the value of EstaFinalizada.
func (s *CreateTransferResponse) GetEstaFinalizada() OptBool {
	return s.EstaFinalizada
}

// GetEstaRechazada returns the value of EstaRechazada.
func (s *CreateTransferResponse) GetEstaRechazada() OptBool {
	return s.EstaRechazada
}

// GetEstaAAuditar returns the value of EstaAAuditar.
func (s *CreateTransferResponse) GetEstaAAuditar() OptBool {
	return s.EstaAAuditar
}

// GetEstaPendiente returns the value of EstaPendiente.
func (s *CreateTransferResponse) GetEstaPendiente() OptBool {
	return s.EstaPendiente
}

// SetOperacionId sets the value of OperacionId.
func (s *CreateTransferResponse) SetOperacionId(val OptInt) {
	s.OperacionId = val
}

// SetOperacionIdExterno sets the value of OperacionIdExterno.
func (s *CreateTransferResponse) SetOperacionIdExterno(val OptString) {
	s.OperacionIdExterno = val
}

// SetEstadoExterno sets the value of EstadoExterno.
func (s *CreateTransferResponse) SetEstadoExterno(val OptCreateTransferResponseEstadoExterno) {
	s.EstadoExterno = val
}

// SetEstadoId sets the value of EstadoId.
func (s *CreateTransferResponse) SetEstadoId(val OptCreateTransferResponseEstadoId) {
	s.EstadoId = val
}

// SetOrigenCuentaId sets the value of OrigenCuentaId.
func (s *CreateTransferResponse) SetOrigenCuentaId(val OptInt) {
	s.OrigenCuentaId = val
}

// SetCoelsaId sets the value of CoelsaId.
func (s *CreateTransferResponse) SetCoelsaId(val OptString) {
	s.CoelsaId = val
}

// SetFechaInicio sets the value of FechaInicio.
func (s *CreateTransferResponse) SetFechaInicio(val OptDateTime) {
	s.FechaInicio = val
}

// SetFechaFin sets the value of FechaFin.
func (s *CreateTransferResponse) SetFechaFin(val OptDateTime) {
	s.FechaFin = val
}

// SetFechaNegocio sets the value of FechaNegocio.
func (s *CreateTransferResponse) SetFechaNegocio(val OptDateTime) {
	s.FechaNegocio = val
}

// SetImporte sets the value of Importe.
func (s *CreateTransferResponse) SetImporte(val OptFloat64) {
	s.Importe = val
}

// SetCvuOrigen sets the value of CvuOrigen.
func (s *CreateTransferResponse) SetCvuOrigen(val OptString) {
	s.CvuOrigen = val
}

// SetReferencia sets the value of Referencia.
func (s *CreateTransferResponse) SetReferencia(val OptString) {
	s.Referencia = val
}

// SetConcepto sets the value of Concepto.
func (s *CreateTransferResponse) SetConcepto(val OptString) {
	s.Concepto = val
}

// SetCvuCbuContraparte sets the value of CvuCbuContraparte.
func (s *CreateTransferResponse) SetCvuCbuContraparte(val OptString) {
	s.CvuCbuContraparte = val
}

// SetAliasContraparte sets the value of AliasContraparte.
func (s *CreateTransferResponse) SetAliasContraparte(val OptString) {
	s.AliasContraparte = val
}

// SetNombreContraparte sets the value of NombreContraparte.
func (s *CreateTransferResponse) SetNombreContraparte(val OptString) {
	s.NombreContraparte = val
}

// SetCuitCuilContraparte sets the value of CuitCuilContraparte.
func (s *CreateTransferResponse) SetCuitCuilContraparte(val OptString) {
	s.CuitCuilContraparte = val
}

// SetComprobanteId sets the value of ComprobanteId.
func (s *CreateTransferResponse) SetComprobanteId(val OptInt) {
	s.ComprobanteId = val
}

// SetComprobanteDevolucionId sets the value of ComprobanteDevolucionId.
func (s *CreateTransferResponse) SetComprobanteDevolucionId(val OptInt) {
	s.ComprobanteDevolucionId = val
}

// SetMensajeAdicional sets the value of MensajeAdicional.
func (s *CreateTransferResponse) SetMensajeAdicional(val OptString) {
	s.MensajeAdicional = val
}

// SetEsTransferenciaInterna sets the value of EsTransferenciaInterna.
func (s *CreateTransferResponse) SetEsTransferenciaInterna(val OptBool) {
	s.EsTransferenciaInterna = val
}

// SetEstaFinalizada sets the value of EstaFinalizada.
func (s *CreateTransferResponse) SetEstaFinalizada(val OptBool) {
	s.EstaFinalizada = val
}

// SetEstaRechazada sets the value of EstaRechazada.
func (s *CreateTransferResponse) SetEstaRechazada(val OptBool) {
	s.EstaRechazada = val
}

// SetEstaAAuditar sets the value of EstaAAuditar.
func (s *CreateTransferResponse) SetEstaAAuditar(val OptBool) {
	s.EstaAAuditar = val
}

// SetEstaPendiente sets the value of EstaPendiente.
func (s *CreateTransferResponse) SetEstaPendiente(val OptBool) {
	s.EstaPendiente = val
}

func (*CreateTransferResponse) createTransferRes() {}

// Descripción del estado de la transferencia informado por nuestro procesador externo (en este caso,
//
//	el banco). El estado UNKNOWN se produce cuando hubo un error de comunicación con algún sistema
//
// externo, el mismo tratará de actualizarse durante el día. En el caso de una transferencia a un
// CVU, inicialmente quedan en estado IN_PROGRESS, este estado se intentará resolver durante el día
// o al final del mismo cuando se concilien todas las operaciones. El estado UNKNOWN_FOREVER indica
// que la operación no pudo resolver el estado, y no se va a reintentar actualizar en forma
// automática. Los estados COMPLETED o FAILED son estado finales que indican que la operación se
// completó o falló.
type CreateTransferResponseEstadoExterno string

const (
	CreateTransferResponseEstadoExternoUNKNOWN        CreateTransferResponseEstadoExterno = "UNKNOWN"
	CreateTransferResponseEstadoExternoINPROGRESS     CreateTransferResponseEstadoExterno = "IN_PROGRESS"
	CreateTransferResponseEstadoExternoUNKNOWNFOREVER CreateTransferResponseEstadoExterno = "UNKNOWN_FOREVER"
	CreateTransferResponseEstadoExternoCOMPLETED      CreateTransferResponseEstadoExterno = "COMPLETED"
	CreateTransferResponseEstadoExternoFAILED         CreateTransferResponseEstadoExterno = "FAILED"
)

// AllValues returns all CreateTransferResponseEstadoExterno values.
func (CreateTransferResponseEstadoExterno) AllValues() []CreateTransferResponseEstadoExterno {
	return []CreateTransferResponseEstadoExterno{
		CreateTransferResponseEstadoExternoUNKNOWN,
		CreateTransferResponseEstadoExternoINPROGRESS,
		CreateTransferResponseEstadoExternoUNKNOWNFOREVER,
		CreateTransferResponseEstadoExternoCOMPLETED,
		CreateTransferResponseEstadoExternoFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateTransferResponseEstadoExterno) MarshalText() ([]byte, error) {
	switch s {
	case CreateTransferResponseEstadoExternoUNKNOWN:
		return []byte(s), nil
	case CreateTransferResponseEstadoExternoINPROGRESS:
		return []byte(s), nil
	case CreateTransferResponseEstadoExternoUNKNOWNFOREVER:
		return []byte(s), nil
	case CreateTransferResponseEstadoExternoCOMPLETED:
		return []byte(s), nil
	case CreateTransferResponseEstadoExternoFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateTransferResponseEstadoExterno) UnmarshalText(data []byte) error {
	switch CreateTransferResponseEstadoExterno(data) {
	case CreateTransferResponseEstadoExternoUNKNOWN:
		*s = CreateTransferResponseEstadoExternoUNKNOWN
		return nil
	case CreateTransferResponseEstadoExternoINPROGRESS:
		*s = CreateTransferResponseEstadoExternoINPROGRESS
		return nil
	case CreateTransferResponseEstadoExternoUNKNOWNFOREVER:
		*s = CreateTransferResponseEstadoExternoUNKNOWNFOREVER
		return nil
	case CreateTransferResponseEstadoExternoCOMPLETED:
		*s = CreateTransferResponseEstadoExternoCOMPLETED
		return nil
	case CreateTransferResponseEstadoExternoFAILED:
		*s = CreateTransferResponseEstadoExternoFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Identificador del estado de la operación. Este es el estado que importa en nuestro sistema.
type CreateTransferResponseEstadoId int

const (
	CreateTransferResponseEstadoId1 CreateTransferResponseEstadoId = 1
	CreateTransferResponseEstadoId2 CreateTransferResponseEstadoId = 2
	CreateTransferResponseEstadoId3 CreateTransferResponseEstadoId = 3
	CreateTransferResponseEstadoId4 CreateTransferResponseEstadoId = 4
	CreateTransferResponseEstadoId5 CreateTransferResponseEstadoId = 5
	CreateTransferResponseEstadoId6 CreateTransferResponseEstadoId = 6
	CreateTransferResponseEstadoId7 CreateTransferResponseEstadoId = 7
)

// AllValues returns all CreateTransferResponseEstadoId values.
func (CreateTransferResponseEstadoId) AllValues() []CreateTransferResponseEstadoId {
	return []CreateTransferResponseEstadoId{
		CreateTransferResponseEstadoId1,
		CreateTransferResponseEstadoId2,
		CreateTransferResponseEstadoId3,
		CreateTransferResponseEstadoId4,
		CreateTransferResponseEstadoId5,
		CreateTransferResponseEstadoId6,
		CreateTransferResponseEstadoId7,
	}
}

// CreateTransferUnauthorized is response for CreateTransfer operation.
type CreateTransferUnauthorized struct{}

func (*CreateTransferUnauthorized) createTransferRes() {}

type CreateTransferUnprocessableEntity ApiError

func (*CreateTransferUnprocessableEntity) createTransferRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateTransferResponseEstadoExterno returns new OptCreateTransferResponseEstadoExterno with value set to v.
func NewOptCreateTransferResponseEstadoExterno(v CreateTransferResponseEstadoExterno) OptCreateTransferResponseEstadoExterno {
	return OptCreateTransferResponseEstadoExterno{
		Value: v,
		Set:   true,
	}
}

// OptCreateTransferResponseEstadoExterno is optional CreateTransferResponseEstadoExterno.
type OptCreateTransferResponseEstadoExterno struct {
	Value CreateTransferResponseEstadoExterno
	Set   bool
}

// IsSet returns true if OptCreateTransferResponseEstadoExterno was set.
func (o OptCreateTransferResponseEstadoExterno) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTransferResponseEstadoExterno) Reset() {
	var v CreateTransferResponseEstadoExterno
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTransferResponseEstadoExterno) SetTo(v CreateTransferResponseEstadoExterno) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTransferResponseEstadoExterno) Get() (v CreateTransferResponseEstadoExterno, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTransferResponseEstadoExterno) Or(d CreateTransferResponseEstadoExterno) CreateTransferResponseEstadoExterno {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateTransferResponseEstadoId returns new OptCreateTransferResponseEstadoId with value set to v.
func NewOptCreateTransferResponseEstadoId(v CreateTransferResponseEstadoId) OptCreateTransferResponseEstadoId {
	return OptCreateTransferResponseEstadoId{
		Value: v,
		Set:   true,
	}
}

// OptCreateTransferResponseEstadoId is optional CreateTransferResponseEstadoId.
type OptCreateTransferResponseEstadoId struct {
	Value CreateTransferResponseEstadoId
	Set   bool
}

// IsSet returns true if OptCreateTransferResponseEstadoId was set.
func (o OptCreateTransferResponseEstadoId) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTransferResponseEstadoId) Reset() {
	var v CreateTransferResponseEstadoId
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTransferResponseEstadoId) SetTo(v CreateTransferResponseEstadoId) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTransferResponseEstadoId) Get() (v CreateTransferResponseEstadoId, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTransferResponseEstadoId) Or(d CreateTransferResponseEstadoId) CreateTransferResponseEstadoId {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
